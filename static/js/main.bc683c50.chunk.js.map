{"version":3,"sources":["board/header.js","board/rawaddbutton.js","board/task.js","board/column.js","board/coladdbutton.js","board/board.js","App.js","reportWebVitals.js","index.js"],"names":["Header","_ref","board","onChange","react_default","a","createElement","className","src","alt","type","name","value","e","target","RawAddButton","colId","onClick","Task","task","changeTaskName","changeTaskText","changeTaskWorker","deleteTask","rawName","rawId","rawText","rawWorker","Column","column","add","deleteColumn","colName","colRaws","map","raw","key","ColAddButton","addColumn","Board","addRaw","changeColumnName","cols","col","App","_React$useState","React","useState","_React$useState2","Object","slicedToArray","setBoard","newboard","objectSpread","console","log","splice","i","length","pop","push","text","worker","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.bc683c50.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Header({board, onChange}) {\r\n    return (\r\n        <div className='header'>\r\n            <div className='header-logo'>\r\n                <img src=\"https://downloader.disk.yandex.ru/preview/0621fab39abb84ba2c5d13c280be4125246da4758a8100bea80ba46f8d8b005d/63667dca/s3qLNl5FsEz_dos1HAcFbUrL_DHAMbn1EsbyLfGuPDsapdTTPitG-3aM-D3RT7vE-mqR3xPcHJSOQWQ5tPzo3A%3D%3D?uid=0&filename=ggt-logo.png&disposition=inline&hash=&limit=0&content_type=image%2Fpng&owner_uid=0&tknv=v2&size=2048x2048\" alt=\"#\" />\r\n                <span>GigaTask</span>\r\n            </div>\r\n            <input type=\"text\" name=\"board-name\" value={board.name} onChange = {e => onChange(e.target.value)} />\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport default function RawAddButton({colId, onChange}) {\r\n    return (\r\n        <div className=\"raw-add\" onClick={() => onChange(colId)}>\r\n            <i className=\"fa-solid fa-plus\"></i>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport default function Task({task, colId, changeTaskName, changeTaskText, changeTaskWorker, deleteTask}){\r\n    return(\r\n        <div className=\"task\">\r\n            <input className=\"task-name\" type=\"text\" name=\"taskName\" value={task.rawName} onChange={e => changeTaskName(e.target.value, colId, task.rawId)} />\r\n            <input className=\"task-text\" type=\"text\" name=\"taskText\" value={task.rawText} onChange={e => changeTaskText(e.target.value, colId, task.rawId)} />\r\n            <input className=\"task-worker\" type=\"text\" name=\"taskWorker\" value={task.rawWorker} onChange={e => changeTaskWorker(e.target.value, colId, task.rawId)} />\r\n            <i className=\"fa-solid fa-trash-can\" onClick={() => deleteTask(colId, task.rawId)}></i>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport RawAddButton from \"./rawaddbutton\";\r\nimport Task from \"./task\"\r\n\r\nexport default function Column({column, add, onChange, changeTaskName, changeTaskText, changeTaskWorker, deleteTask, deleteColumn}){\r\n\r\n    return(\r\n        <div className=\"column\">\r\n            <input className=\"column-name\" type=\"text\" name=\"column-name\" value={column.colName} onChange={e => onChange(e.target.value, column.colId)}/>\r\n            <i className=\"fa-solid fa-trash-can\" onClick={() => deleteColumn(column.colId)}></i>\r\n            { column.colRaws.map( raw => {\r\n                if (!(raw.rawName === \"upupdowndownleftrightleftrightAB\")){\r\n                    return <Task task={raw} changeTaskName={changeTaskName} changeTaskText={changeTaskText} changeTaskWorker={changeTaskWorker} deleteTask={deleteTask} colId={column.colId} key={raw.rawId}/>\r\n                }\r\n                else{\r\n                    return <RawAddButton colId={column.colId} key={column.colId} onChange={add}/>\r\n                }\r\n            })}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport default function ColAddButton({addColumn}){\r\n    return (\r\n        <div className=\"col-add\" onClick={() => addColumn()}>\r\n            <i className=\"fa-solid fa-plus\"></i>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport Column from \"./column\"\r\nimport ColAddButton from \"./coladdbutton\"\r\n\r\nexport default function Board({board, addRaw, addColumn, changeColumnName, changeTaskName, changeTaskText, changeTaskWorker, deleteTask, deleteColumn}){\r\n    return (\r\n        <div className=\"board\">\r\n            { board.cols.map(col => {\r\n                if(!(col.colName === \"upupdowndownleftrightleftrightAB\")){\r\n                    return <Column column={col} add={addRaw} key={col.colId} onChange={changeColumnName} changeTaskName={changeTaskName} changeTaskText={changeTaskText} changeTaskWorker={changeTaskWorker} deleteTask={deleteTask} deleteColumn={deleteColumn}/>\r\n                }\r\n                else{\r\n                    return <ColAddButton addColumn={addColumn} key={1337}/>\r\n                }\r\n            })}\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport Header from './board/header';\nimport Board from './board/board'\n\nfunction App() {\n  const [board, setBoard] = React.useState({\n    name: \"fix me pls\", \n    cols: [\n      {\n        colName: \"ToDo\",\n        colRaws: [\n          {\n            rawName: \"Re-make DB\",\n            rawText: \"Please develop new DB ASAP\",\n            rawWorker: \"Stepankov\",\n            rawId: 0\n          },\n          {\n            rawName: \"New logo\",\n            rawText: \"We need new one!\",\n            rawWorker: \"Yoza\",\n            rawId: 1\n          },\n          {\n            rawName: \"upupdowndownleftrightleftrightAB\",\n            rawId: 2\n          }\n        ],\n        colId: 0\n      },\n      {\n        colName: \"Doing\",\n        colRaws: [\n          {\n            rawName: \"New front\",\n            rawText: \"Rewrite front in React\",\n            rawWorker: \"Miandic\",\n            rawId: 0\n          },\n          {\n            rawName: \"upupdowndownleftrightleftrightAB\",\n            rawId: 1\n          }\n        ],\n        colId: 1\n      },\n      {\n        colName: \"upupdowndownleftrightleftrightAB\",\n        colId: 3\n      }\n    ]\n  })\n\n  function addRaw (colId) {\n    let rawId = board.cols[colId].colRaws.length\n    let newboard = {...board}\n    newboard.cols[colId].colRaws.pop()\n    newboard.cols[colId].colRaws.push({\n      rawName: \"Task name\",\n      rawText: \"Task text\",\n      rawWorker: \"Task worker\",\n      rawId: rawId - 1\n    })\n    newboard.cols[colId].colRaws.push({\n      rawName: \"upupdowndownleftrightleftrightAB\",\n      rawId: rawId\n    })\n    setBoard(newboard)\n  }\n\n  function addColumn() {\n    let colId = board.cols.length\n    let newboard = {...board}\n    newboard.cols.pop()\n    newboard.cols.push({\n      colName: \"Column\",\n      colRaws: [\n        {\n          rawName: \"upupdowndownleftrightleftrightAB\"\n        }\n      ],\n      colId: colId - 1\n    })\n    newboard.cols.push({\n      colName: \"upupdowndownleftrightleftrightAB\",\n      colId: colId\n    })\n    setBoard(newboard)\n  }\n\n  function changeBoardName(name){\n    let newboard = {...board}\n    newboard.name = name\n    setBoard(newboard)\n  }\n\n  function changeColumnName(name, colId){\n    let newboard = {...board}\n    newboard.cols[colId].colName = name\n    setBoard(newboard)\n  }\n\n  function changeTaskName(name, colId, rawId){\n    let newboard = {...board}\n    newboard.cols[colId].colRaws[rawId].rawName = name\n    setBoard(newboard)\n  }\n\n  function changeTaskText(text, colId, rawId){\n    let newboard = {...board}\n    newboard.cols[colId].colRaws[rawId].rawText = text\n    setBoard(newboard)\n  }\n\n  function changeTaskWorker(worker, colId, rawId){\n    let newboard = {...board}\n    newboard.cols[colId].colRaws[rawId].rawWorker = worker\n    setBoard(newboard)\n  }\n\n  function deleteColumn(colId){\n    let newboard = {...board}\n    console.log(newboard.cols)\n    newboard.cols.splice(colId, 1)\n    for(let i = colId; i < newboard.cols.length; i+=1){\n      newboard.cols[i].colId -= 1\n    }\n    console.log(newboard.cols)\n    setBoard(newboard)\n  }\n\n  function deleteTask(colId, rawId){\n    let newboard = {...board}\n    newboard.cols[colId].colRaws.splice(rawId, 1)\n    for(let i = rawId; i < newboard.cols[colId].colRaws.length; i+=1){\n      newboard.cols[colId].colRaws[i].rawId -= 1\n    }\n    setBoard(newboard)\n  }\n\n  function moveTask(colIdCur, rawIdCur, colId, rawId){\n    let newboard = {...board}\n    let task = newboard.cols[colIdCur].colRaws[rawIdCur]\n    task.rawId = rawId\n    deleteTask(colIdCur, rawIdCur)\n    newboard.cols[colId].colRaws.splice(rawId, 0, task)\n    for (let i = rawId+1; i < newboard.cols[colId].colRaws.length; i+=1){\n      newboard.cols[colId].colRaws[i].rawId += 1\n    }\n    setBoard(newboard)\n  }\n\n  function moveColumn(colIdCur, colId){\n    let newboard = {...board}\n    let column = newboard.cols[colIdCur]\n    column.colId = colId\n    deleteColumn(colIdCur)\n    newboard.cols.splice(colId, 0, column)\n    for (let i = colId+1; i < newboard.cols.length; i+=1){\n      newboard.cols[i].colId += 1\n    }\n    setBoard(newboard)\n  }\n\n  return (\n    <div className='wrapper'>\n      <Header board={board} onChange={changeBoardName}/>\n      <Board\n        board={board}\n        addRaw={addRaw}\n        addColumn={addColumn}\n        changeColumnName={changeColumnName}\n        changeTaskName={changeTaskName}\n        changeTaskText={changeTaskText}\n        changeTaskWorker={changeTaskWorker}\n        deleteTask={deleteTask}\n        deleteColumn={deleteColumn}\n        />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}